#!/bin/bash
shopt -s nullglob

aws_env() {
  source ~/aws/accounts/"$1"
  export EC2_HOME=~/aws/ec2-api-tools
  export AWS_RDS_HOME=~/aws/RDSCli
  export AWS_CREDENTIAL_FILE=~/aws/accounts/"$1"

  if [[ ! -x ${EC2_HOME}/bin/ec2-describe-instances ]]; then
    echo "ERROR: couldn't find the EC2 API Tools in $EC2_HOME"; exit 1
  fi

  if [[ ! -x ${AWS_RDS_HOME}/bin/rds-describe-db-instances ]]; then
    echo "WARNING: couldn't find the RDS CLI Toolkit in $AWS_RDS_HOME"
  fi

  [[ $PATH != *${EC2_HOME}* ]] && export PATH="${PATH}:${EC2_HOME}/bin"
  [[ $PATH != *${AWS_RDS_HOME}* ]] && export PATH="${PATH}:${AWS_RDS_HOME}/bin"
 
  if [[ -x /usr/libexec/java_home ]]; then
    export JAVA_HOME="$(/usr/libexec/java_home)"
  elif [[ -d /usr/lib/jvm/jre ]]; then
    export JAVA_HOME='/usr/lib/jvm/jre'
  fi
}

ec2_parse() {
  while read -ra edi; do
    header="${edi[0]}"

    if [[ $header == INSTANCE ]]; then
      hostname="${edi[3]}"
      [[ $hostname == ec2* ]] && key="${edi[6]}.pem" type="${edi[8]}"
      [[ $hostname == ip* ]] && key="${edi[5]}.pem" type="${edi[7]}"
    elif [[ $header == TAG ]]; then
      [[ $hostname && $key ]] && [[ ${edi[3]} == "Name" ]] && name="${edi[4]:-NONAME}"
    elif [[ $header == RESERVATION ]]; then
      [[ $hostname && $key ]] && name='NONAME'
    fi

    if [[ $name && $key && $hostname ]]; then
      hit='1'; fname="${1}/${name}"
      if [[ -n $2 ]]; then
        if [[ $2 == -i ]]; then
          conn="ssh -i $HOME/aws/keys/${key} ec2-user@${hostname}"
        else
          output="$(ssh -ni ~/aws/keys/"$key" ec2-user@"$hostname" "${@:2}" 2>&1)"
          [[ -n $output ]] && echo "${fname}: $output" || nooutput+="${fname} "
        fi
      else
        echo "${fname} (${type}): ssh -i ~/aws/keys/${key} ec2-user@${hostname}"
      fi
      unset hostname key name fname
    fi
  done < <(ec2-describe-instances $ediflags)
}

rds_parse() {
  while read -ra rdi; do
    if [[ ${rdi[0]} == DBINSTANCE && ${rdi[7]} == available ]]; then
      if [[ ${rdi[13]} == y ]]; then
        dver="${rdi[14]}"
      else
        dver="${rdi[13]}"
      fi
      echo "${baccount}/${rdi[1]} (${rdi[3]}) ${rdi[5]}GB $dver ${rdi[8]}"
    fi
  done < <(rds-describe-db-instances --I "$AWS_ACCESS_KEY" --S "$AWS_SECRET_KEY")
}

if [[ $1 == all ]]; then
  for account in ~/aws/accounts/*; do
    if [[ -f $account ]]; then
      baccount="${account##*/}"
      aws_env "$baccount"
      if [[ $2 == rds ]]; then
        rds_parse
      else
        ec2_parse "$baccount" "${@:2}"
      fi
    fi
  done
  [[ -n $nooutput ]] && echo "NO OUTPUT: $nooutput"
elif [[ -f ~/aws/accounts/${1%/*} ]]; then
  account="${1%/*}"; instance="${1#*/}"
  [[ $account != $instance ]] && ediflags="-F tag-value=${instance}"
  aws_env "$account"
  ec2_parse "$account" "${@:2}"
  [[ -n $nooutput ]] && echo "NO STDOUT: $nooutput"
  [[ ! $hit ]] && echo "ERROR: $1 instance not found"
  [[ -n $conn ]] && $conn
else
 echo "usage: $0 [account|account/instance|all] [command|-i]"
 for account in ~/aws/accounts/*; do echo -n "${account##*/} "; done; echo
fi
