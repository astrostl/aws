#!/bin/bash
shopt -s nullglob

aws_env() {
  source ~/aws/accounts/"$1"
  export EC2_HOME=~/aws/ec2-api-tools

  if [[ ! -x ${EC2_HOME}/bin/ec2-describe-instances ]]; then
    echo "ERROR: couldn't find the EC2 API Tools in $EC2_HOME"; exit 1
  fi

  [[ $PATH != *${EC2_HOME}* ]] && PATH="${PATH}:${EC2_HOME}/bin"
 
  if [[ -x /usr/libexec/java_home ]]; then
    export JAVA_HOME="$(/usr/libexec/java_home)"
  elif [[ -d /usr/lib/jvm/jre ]]; then
    export JAVA_HOME='/usr/lib/jvm/jre'
  fi
}

aws_parse() {
  while read -ra edi; do
    header="${edi[0]}"

    if [[ $header == INSTANCE ]]; then
      ip="${edi[3]}"; [[ $ip == ec2* ]] && key="${edi[6]}.pem"
    elif [[ $header == TAG ]]; then
      [[ $ip && $key ]] && name="${edi[4]:-NONAME}"
    fi

    if [[ $name && $key && $ip ]]; then
      fname="${1}/${name}"
      if [[ -n $2 ]]; then
        stdout="$(ssh -ni ~/aws/keys/"$key" ec2-user@"$ip" "${@:2}")"
        [[ -n $stdout ]] && echo "${fname}: $stdout" || nostdout+="${fname} "
      else
        echo "${fname}: ssh -i ~/aws/keys/${key} ec2-user@${ip}"
      fi
      unset ip key name fname
    fi
  done < <(ec2-describe-instances $ediflags)
}

if [[ $1 == all ]]; then
  for account in ~/aws/accounts/*; do
    if [[ -f $account ]]; then
      baccount="${account##*/}"
      aws_env "$baccount"
      aws_parse "$baccount" "${@:2}"
    fi
  done
  [[ -n $nostdout ]] && echo "NO STDOUT: $nostdout"
elif [[ -f ~/aws/accounts/${1%/*} ]]; then
  account="${1%/*}"; instance="${1#*/}"
  [[ $account != $instance ]] && ediflags="-F tag-value=${instance}"
  aws_env "$account"
  aws_parse "$account" "${@:2}"
  [[ -n $nostdout ]] && echo "NO STDOUT: $nostdout"
else
 echo "usage: $0 [account|all] [command]"
 for account in ~/aws/accounts/*; do echo -n "${account##*/} "; done; echo
fi
