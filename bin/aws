#!/bin/bash
shopt -s nullglob

aws_env() {
  source ~/aws/accounts/"$1"
  export EC2_HOME=~/aws/ec2-api-tools

  [[ $PATH != *${EC2_HOME}* ]] && PATH="${PATH}:${EC2_HOME}/bin"
 
  if [[ -x /usr/libexec/java_home ]]; then
    export JAVA_HOME="$(/usr/libexec/java_home)"
  elif [[ -d /usr/lib/jvm/jre ]]; then
    export JAVA_HOME='/usr/lib/jvm/jre'
  fi
}

aws_parse() {
  while read -ra edi; do
    header="${edi[0]}"

    if [[ $header == INSTANCE ]]; then
      ip="${edi[3]}"; [[ $ip == ec2* ]] && key="${edi[6]}.pem"
    elif [[ $header == TAG ]]; then
      [[ $ip && $key ]] && name="${edi[4]:-NONAME}"
    fi

    if [[ $name && $key && $ip ]]; then
      if [[ -n $2 ]]; then
        echo -n "${1}/${name}: "
        ssh -ni ~/aws/keys/"$key" ec2-user@"$ip" "${@:2}"
      else
        echo "${1}/${name}: ssh -i ~/aws/keys/${key} ec2-user@${ip}"
      fi
      unset ip key name
    fi
  done < <(ec2-describe-instances)
}

if [[ $1 == all ]]; then
  for account in ~/aws/accounts/*; do
    if [[ -f $account ]]; then
      baccount="${account##*/}"
      aws_env "$baccount"
      aws_parse "$baccount" "${@:2}"
    fi
  done
elif [[ -f ~/aws/accounts/"$1" ]]; then
  aws_env "$1"
  aws_parse "$@"
else
 echo "usage: $0 [account|all] [command]"
 for account in ~/aws/accounts/*; do echo -n "${account##*/} "; done; echo
fi
